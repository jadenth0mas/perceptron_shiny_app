geom_point() =
geom_jitter()
ggplot(throat, aes(x=duration_minutes, y=sore_throat)) +
geom_point() +
geom_jitter()
ggplot(throat, aes(x=duration_minutes, y=sore_throat)) +
geom_point() +
geom_jitter(height=1/20, width=0.005, size=1.5, alpha=.5)
ggplot(throat, aes(x=duration_minutes, y=sore_throat)) +
geom_point() +
geom_jitter(height=1/20, width=0.005, size=1.5, alpha=.5) +
stat_smooth(method="glm", method.args=list("binomial"))
throat <- read_csv("/Users/jadenthomas/Desktop/OSU/OSU Junior/Spring/STAT_3202/throat_corrected.csv")
throat %>% mutate(duration=cut(breaks=10))
throat <- read_csv("/Users/jadenthomas/Desktop/OSU/OSU Junior/Spring/STAT_3202/throat_corrected.csv")
throat %>% mutate(duration=cut(duration, breaks=10))
throat <- read_csv("/Users/jadenthomas/Desktop/OSU/OSU Junior/Spring/STAT_3202/throat_corrected.csv")
throat %>% mutate(duration=cut(duration))
throat <- read_csv("/Users/jadenthomas/Desktop/OSU/OSU Junior/Spring/STAT_3202/throat_corrected.csv")
throat %>% mutate(duration_minutes=cut(duration_minutes))
throat <- read_csv("/Users/jadenthomas/Desktop/OSU/OSU Junior/Spring/STAT_3202/throat_corrected.csv")
throat %>% mutate(duration_minutes=cut(duration_minutes, breaks=10))
throat
throat <- read_csv("/Users/jadenthomas/Desktop/OSU/OSU Junior/Spring/STAT_3202/throat_corrected.csv")
throat <- throat %>% mutate(duration_minutes=cut(duration_minutes, breaks=10))
throat
ggplot(throat, aes(x=duration_minutes, y=sore_throat)) +
geom_point() +
geom_jitter(height=1/20, width=0.005, size=1.5, alpha=.5) +
stat_smooth(method="glm", method.args=list("binomial"))
ggplot(throat, aes(x=duration_minutes, y=sore_throat)) +
geom_point() +
geom_jitter(height=1/20, width=0.005, size=1.5, alpha=.5)
ggplot(throat, aes(x=duration_minutes, y=sore_throat)) +
geom_point() +
geom_jitter(height=1/20, width=0.005, size=1.5, alpha=.5)
table(throat)
ggplot(throat, aes(x=duration_minutes, y=sore_throat)) +
geom_point() +
geom_jitter(height=1/20, width=0.005, size=1.5, alpha=.5) +
geom_smooth(method="glm", method.args=list("binomial"))
table(throat)
ggplot(throats, aes(x=duration_minutes, y=exp(sore_throat)/exp(1+sore_throat))) +
geom_point()
ggplot(throat, aes(x=duration_minutes, y=exp(sore_throat)/exp(1+sore_throat))) +
geom_point()
ggplot(throat, aes(x=duration_minutes, y=exp(sore_throat)/exp(1+sore_throat))) +
geom_point() +
geom_jitter()
ggplot(throat, aes(x=duration_minutes, y=exp(sore_throat)/exp(1+sore_throat))) +
geom_point() +
geom_jitter(height=1/20, width=0.005, size=1.5, alpha=.5)
ggplot(throat, aes(x=duration_minutes, y=log(sore_throat/(1-sore_throat)))) +
geom_point() +
geom_jitter(height=1/20, width=0.005, size=1.5, alpha=.5)
log(sore_throat/(1-sore_throat))
log(throat$sore_throat/(1-throat$sore_throat))
ggplot(throat, aes(x=duration_minutes, y=(1/(1+sore_throat)))) +
geom_point() +
geom_jitter(height=1/20, width=0.005, size=1.5, alpha=.5)
ggplot(throat, aes(x=duration_minutes, y=(sore_throat/(1-sore_throat)))) +
geom_point() +
geom_jitter(height=1/20, width=0.005, size=1.5, alpha=.5)
throat$sore_throat/(1-throat$sore_throat)
ggplot(throat, aes(x=duration_minutes, y=(sore_throat/(1-sore_throat)))) +
geom_point() +
geom_jitter(height=1/20, width=0.005, size=1.5, alpha=.5)
ggplot(throat, aes(x=duration_minutes, y=(log(sore_throat/(1-sore_throat))))) +
geom_point() +
geom_jitter(height=1/20, width=0.005, size=1.5, alpha=.5)
ggplot(throat, aes(x=duration_minutes, y=sore_throat)) +
geom_point() +
geom_jitter(height=1/20, width=0.005, size=1.5, alpha=.5) +
geom_smooth(method="glm", method.args=list("binomial"))
throat <- read_csv("/Users/jadenthomas/Desktop/OSU/OSU Junior/Spring/STAT_3202/throat_corrected.csv")
throat <- throat %>% mutate(duration_minutes_bin=cut(duration_minutes, breaks=10))
throat
ggplot(throat, aes(x=duration_minutes, y=sore_throat)) +
geom_point() +
geom_jitter(height=1/20, width=0.005, size=1.5, alpha=.5)
table(throat)
ggplot(throat, aes(x=duration_minutes, y=sore_throat)) +
geom_point() +
geom_jitter(height=1/20, width=0.005, size=1.5, alpha=.5) +
geom_smooth(method="glm", method.args=list("binomial"))
ceiling(throat$duration_minutes)
ggplot(throat, aes(x=duration_minutes, y=sore_throat)) +
geom_point() +
geom_jitter(height=1/20, width=0.005, size=1.5, alpha=.5) +
geom_smooth(method="glm", method.args=list("binomial"))
round(throat$duration_minutes, digits=1)
ggplot(throat, aes(x=duration_minutes, y=sore_throat)) +
geom_point() +
geom_jitter(height=1/20, width=0.005, size=1.5, alpha=.5) +
geom_smooth(method="glm", method.args=list("binomial"))
signif(throat$duration_minutes, 1)
ggplot(throat, aes(x=duration_minutes, y=sore_throat)) +
geom_point() +
geom_jitter(height=1/20, width=0.005, size=1.5, alpha=.5) +
geom_smooth(method="glm", method.args=list("binomial"))
signif(throat$duration_minutes, 1)
throat$duration_minutes
ggplot(throat, aes(x=duration_minutes, y=sore_throat)) +
geom_point() +
geom_jitter(height=1/20, width=0.005, size=1.5, alpha=.5) +
geom_smooth(method="glm", method.args=list("binomial"))
trunc(throat$duration_minutes)
throat$duration_minutes
ggplot(throat, aes(x=duration_minutes, y=sore_throat)) +
geom_point() +
geom_jitter(height=1/20, width=0.005, size=1.5, alpha=.5) +
geom_smooth(method="glm", method.args=list("binomial"))
trunc(throat$duration_minutes, 10)
throat$duration_minutes
ggplot(throat, aes(x=duration_minutes, y=sore_throat)) +
geom_point() +
geom_jitter(height=1/20, width=0.005, size=1.5, alpha=.5) +
geom_smooth(method="glm", method.args=list("binomial"))
round(throat$duration_minutes, -2)
ggplot(throat, aes(x=duration_minutes, y=sore_throat)) +
geom_point() +
geom_jitter(height=1/20, width=0.005, size=1.5, alpha=.5) +
geom_smooth(method="glm", method.args=list("binomial"))
round(throat$duration_minutes, -1)
ggplot(throat, aes(x=duration_minutes, y=sore_throat)) +
geom_point() +
geom_jitter(height=1/20, width=0.005, size=1.5, alpha=.5) +
geom_smooth(method="glm", method.args=list("binomial"))
throat <- read_csv("/Users/jadenthomas/Desktop/OSU/OSU Junior/Spring/STAT_3202/throat_corrected.csv")
throat <- throat %>% mutate(duration_minutes=round(duration_binutes, -1))
throat <- read_csv("/Users/jadenthomas/Desktop/OSU/OSU Junior/Spring/STAT_3202/throat_corrected.csv")
throat <- throat %>% mutate(duration_minutes=round(duration_minutes, -1))
throat
ggplot(throat, aes(x=duration_minutes, y=sore_throat)) +
geom_point() +
geom_jitter(height=1/20, width=0.005, size=1.5, alpha=.5)
table(throat)
ggplot(throat, aes(x=duration_minutes, y=sore_throat)) +
geom_point() +
geom_jitter(height=1/20, width=0.005, size=1.5, alpha=.5) +
geom_smooth(method="glm", method.args=list("binomial"))
throat.model <- glm(sore_throat~duration_minutes, data=throat, family="binomial")
throat.model <- glm(sore_throat~duration_minutes, data=throat, family="binomial")
summary(throat.model)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggthemes)
library(verification)
set.seed(2024)
mlb_2023 <- read_csv("mlbBaseballPlayers_2023.csv")
club_2024 <- read_csv("clubBaseballPlayers_2024.csv")
club_2024 <- club_2024 %>%
mutate(Age=(year(Sys.Date())-year(as.Date(paste0("01/", club_2024$DOB), format="%d/%m/%Y"))),
POS=str_split_i(POS, pattern=" / ", i=1)) %>%
rename(BAT=Bats, THW=Throws)
full <- bind_rows(mlb_2023, club_2024)
sub <- full %>% dplyr::select(fname, lname, Age, HT, WT, city, state, POS, Team, League) %>%
mutate(League=as.factor(League)) %>% mutate(MLB=(League=="MLB"))
ggplot(sub, aes(x=WT, y=HT)) +
geom_point(aes(color=League)) +
labs(title="Height and Weight of Players by League", x="Weight in lbs",
y="Height in inches") +
theme_economist()
sub %>% ggplot(aes(x=Age, y=League)) +
geom_boxplot(fill="#e63946") +
theme_economist() +
labs(title="Player Age by League", x="Age")
sub %>% ggplot(aes(x=HT, y=League)) +
geom_boxplot(fill="#e63946") +
theme_economist() +
labs(title="Player Height by League", x="Height")
sub %>% ggplot(aes(x=WT, y=League)) +
geom_boxplot(fill="#e63946") +
theme_economist() +
labs(title="Player Weight by League", x="Weight")
ggplot(sub, aes(x=WT, y=HT)) +
geom_point(aes(color=League)) +
labs(title="Height and Weight of Players by League", x="Weight in lbs",
y="Height in inches") +
theme_economist()
sub %>% ggplot(aes(x=Age, y=League)) +
geom_boxplot(fill="orange") +
theme_economist() +
labs(title="Player Age by League", x="Age")
sub %>% ggplot(aes(x=HT, y=League)) +
geom_boxplot(fill="#e63946") +
theme_economist() +
labs(title="Player Height by League", x="Height")
sub %>% ggplot(aes(x=WT, y=League)) +
geom_boxplot(fill="#e63946") +
theme_economist() +
labs(title="Player Weight by League", x="Weight")
ggplot(sub, aes(x=WT, y=HT)) +
geom_point(aes(color=League)) +
labs(title="Height and Weight of Players by League", x="Weight in lbs",
y="Height in inches") +
theme_economist()
sub %>% ggplot(aes(x=Age, y=League)) +
geom_boxplot(fill="#e63946") +
theme_economist() +
labs(title="Player Age by League", x="Age")
sub %>% ggplot(aes(x=HT, y=League)) +
geom_boxplot(fill="#e63946") +
theme_economist() +
labs(title="Player Height by League", x="Height")
sub %>% ggplot(aes(x=WT, y=League)) +
geom_boxplot(fill="#e63946") +
theme_economist() +
labs(title="Player Weight by League", x="Weight")
summary(sub)
sub %>% group_by(League) %>% summarise(mean(HT), mean(WT), mean(Age))
train <- sample(c(TRUE, FALSE), nrow(sub), replace=T, prob=c(0.7, 0.3))
sub.train <- sub[train,]
sub.test <- sub[!train,]
Y.test <- sub.test$MLB
m.fit <- glm(MLB~HT+WT, data=sub.train, family="binomial")
summary(m.fit)
plot(m.fit)
ggplot(sub, aes(x=HT, y=MLB, color=WT)) +
geom_point()
ggplot(sub, aes(x=WT, y=HT)) +
geom_point(aes(color=League)) +
labs(title="Height and Weight of Players by League", x="Weight in lbs",
y="Height in inches") +
theme_economist()
sub %>% ggplot(aes(x=Age, y=League)) +
geom_boxplot(fill="#e63946") +
theme_economist() +
labs(title="Player Age by League", x="Age")
sub %>% ggplot(aes(x=HT, y=League)) +
geom_boxplot(fill="#e63946") +
theme_economist() +
labs(title="Player Height by League", x="Height")
sub %>% ggplot(aes(x=WT, y=League)) +
geom_boxplot(fill="#e63946") +
theme_economist() +
labs(title="Player Weight by League", x="Weight")
club_2024 <- club_2024 %>%
mutate(Age=(year(Sys.Date())-year(as.Date(paste0("01/", club_2024$DOB), format="%d/%m/%Y"))),
POS=str_split_i(POS, pattern=" / ", i=1)) %>%
rename(BAT=Bats, THW=Throws)
mlb_2023 <- read_csv("mlbBaseballPlayers_2023.csv")
club_2024 <- read_csv("clubBaseballPlayers_2024.csv")
club_2024 <- club_2024 %>%
mutate(Age=(year(Sys.Date())-year(as.Date(paste0("01/", club_2024$DOB), format="%d/%m/%Y"))),
POS=str_split_i(POS, pattern=" / ", i=1)) %>%
rename(BAT=Bats, THW=Throws)
full <- bind_rows(mlb_2023, club_2024)
sub <- full %>% dplyr::select(fname, lname, Age, HT, WT, city, state, POS, Team, League) %>%
mutate(League=as.factor(League)) %>% mutate(MLB=as.numeric((League=="MLB")))
ggplot(sub, aes(x=HT, y=MLB, color=WT)) +
geom_point()
ggplot(sub, aes(x=WT, y=HT)) +
geom_point(aes(color=League)) +
labs(title="Height and Weight of Players by League", x="Weight in lbs",
y="Height in inches") +
theme_economist()
sub %>% ggplot(aes(x=Age, y=League)) +
geom_boxplot(fill="#e63946") +
theme_economist() +
labs(title="Player Age by League", x="Age")
sub %>% ggplot(aes(x=HT, y=League)) +
geom_boxplot(fill="#e63946") +
theme_economist() +
labs(title="Player Height by League", x="Height")
sub %>% ggplot(aes(x=WT, y=League)) +
geom_boxplot(fill="#e63946") +
theme_economist() +
labs(title="Player Weight by League", x="Weight")
ggplot(sub, aes(x=HT, y=MLB, color=WT)) +
geom_point() +
geom_smooth(method="glm", method.args=list("binomial"))
ggplot(sub, aes(x=WT, y=HT)) +
geom_point(aes(color=League)) +
labs(title="Height and Weight of Players by League", x="Weight in lbs",
y="Height in inches") +
theme_economist()
sub %>% ggplot(aes(x=Age, y=League)) +
geom_boxplot(fill="#e63946") +
theme_economist() +
labs(title="Player Age by League", x="Age")
sub %>% ggplot(aes(x=HT, y=League)) +
geom_boxplot(fill="#e63946") +
theme_economist() +
labs(title="Player Height by League", x="Height")
sub %>% ggplot(aes(x=WT, y=League)) +
geom_boxplot(fill="#e63946") +
theme_economist() +
labs(title="Player Weight by League", x="Weight")
mlb_2023 <- read_csv("mlbBaseballPlayers_2023.csv")
club_2024 <- read_csv("clubBaseballPlayers_2024.csv")
club_2024 <- club_2024 %>%
mutate(Age=(year(Sys.Date())-year(as.Date(paste0("01/", club_2024$DOB), format="%d/%m/%Y"))),
POS=str_split_i(POS, pattern=" / ", i=1)) %>%
rename(BAT=Bats, THW=Throws)
full <- bind_rows(mlb_2023, club_2024)
sub <- full %>% dplyr::select(fname, lname, Age, HT, WT, city, state, POS, Team, League) %>%
mutate(League=as.factor(League)) %>% mutate(MLB=(League=="MLB"))
ggplot(sub, aes(x=HT, y=MLB, color=WT)) +
geom_point() +
geom_smooth(method="glm", method.args=list("binomial"))
ggplot(sub, aes(x=WT, y=HT)) +
geom_point(aes(color=League)) +
labs(title="Height and Weight of Players by League", x="Weight in lbs",
y="Height in inches") +
theme_economist()
sub %>% ggplot(aes(x=Age, y=League)) +
geom_boxplot(fill="#e63946") +
theme_economist() +
labs(title="Player Age by League", x="Age")
sub %>% ggplot(aes(x=HT, y=League)) +
geom_boxplot(fill="#e63946") +
theme_economist() +
labs(title="Player Height by League", x="Height")
sub %>% ggplot(aes(x=WT, y=League)) +
geom_boxplot(fill="#e63946") +
theme_economist() +
labs(title="Player Weight by League", x="Weight")
# F means that, yes the individual is in the MLB
m.probs <- predict(m.fit, sub.test, type="response")
m.pred <- rep(F, length(m.probs))
m.pred[m.probs>.5] <- T
mlb_2023 <- read_csv("mlbBaseballPlayers_2023.csv")
club_2024 <- read_csv("clubBaseballPlayers_2024.csv")
club_2024 <- club_2024 %>%
mutate(Age=(year(Sys.Date())-year(as.Date(paste0("01/", club_2024$DOB), format="%d/%m/%Y"))),
POS=str_split_i(POS, pattern=" / ", i=1)) %>%
rename(BAT=Bats, THW=Throws)
full <- bind_rows(mlb_2023, club_2024)
sub <- full %>% dplyr::select(fname, lname, Age, HT, WT, city, state, POS, Team, League) %>%
mutate(League=as.factor(League)) %>% mutate(MLB=(League=="MLB"))
ggplot(sub, aes(x=WT, y=HT)) +
geom_point(aes(color=League)) +
labs(title="Height and Weight of Players by League", x="Weight in lbs",
y="Height in inches") +
theme_economist()
sub %>% ggplot(aes(x=Age, y=League)) +
geom_boxplot(fill="#e63946") +
theme_economist() +
labs(title="Player Age by League", x="Age")
sub %>% ggplot(aes(x=HT, y=League)) +
geom_boxplot(fill="#e63946") +
theme_economist() +
labs(title="Player Height by League", x="Height")
sub %>% ggplot(aes(x=WT, y=League)) +
geom_boxplot(fill="#e63946") +
theme_economist() +
labs(title="Player Weight by League", x="Weight")
summary(sub)
sub %>% group_by(League) %>% summarise(mean(HT), mean(WT), mean(Age))
summary(sub)
sub %>% group_by(League) %>% summarise(mean(HT), mean(WT), mean(Age), n())
summary(sub)
sub %>% group_by(League) %>% summarise(mean(HT), mean(WT), mean(Age), n=n())
summary(sub)
sub %>% group_by(League) %>% summarise(meanHT=mean(HT), meanWT=mean(WT), meanAGE=mean(Age), n=n())
train <- sample(c(TRUE, FALSE), nrow(sub), replace=T, prob=c(0.7, 0.3))
sub.train <- sub[train,]
sub.test <- sub[!train,]
Y.test <- sub.test$MLB
m.fit <- glm(MLB~HT+WT, data=sub.train, family="binomial")
summary(m.fit)
plot(m.fit)
# F means that, yes the individual is in the MLB
m.probs <- predict(m.fit, sub.test, type="response")
m.pred <- rep(F, length(m.probs))
m.pred[m.probs>.5] <- T
table(m.pred, Y.test)
mean(m.pred==Y.test)
table(m.pred, Y.test)
mean(m.pred==Y.test)
roc.plot(x=as.numeric(Y.test), pred=as.numeric(m.pred), main="ROC curve for MLB Classifcation")
# Log regression ROC
roc.plot(x=as.numeric(Y.test), pred=as.numeric(m.pred), main="ROC curve for MLB Classifcation")
table(m.pred, Y.test, row.names=c("Club Predicted", "MLB Predicted"),
responseName=c("Club Actual", "MLB Actual"))
table(m.pred, Y.test, row.names=c("Club Predicted", "MLB Predicted"))
table(m.pred, Y.test, dnn=c("Predicted", "Actual"))
mean(m.pred==Y.test)
roc.plot(x=as.numeric(Y.test), pred=as.numeric(m.pred), main="ROC curve for MLB Classifcation")
table(m.pred, Y.test, dnn=c("Predicted", "Actual"), responseName=c("Club", "MLB"))
table(m.pred, Y.test, dnn=c("Predicted", "Actual"), row.names=c("Club", "MLB"))
table(m.pred, Y.test, dnn=c("Predicted MLB", "Actual MLB"))
mean(m.pred==Y.test)
roc.plot(x=as.numeric(Y.test), pred=as.numeric(m.pred), main="ROC curve for MLB Classifcation")
table(m.pred, Y.test, dnn=c("Predicted MLB", "Actual MLB"))
mean(m.pred==Y.test)
roc.plot(x=Y.test, pred=m.pred, main="ROC curve for MLB Classifcation")
table(m.pred, Y.test, dnn=c("Predicted MLB", "Actual MLB"))
mean(m.pred==Y.test)
roc.plot(x=as.numeric(Y.test), pred=as.numeric(m.pred), main="ROC curve for MLB Classifcation")
# LDA ROC
roc.plot(x=as.numeric(Y.test), pred=as.numeric(lda.pred$class), main="ROC curve for LDA")
library(tidyverse)
library(MASS)
library(verification)
library(e1071)
library(class)
library(neuralnet)
set.seed(2024)
mlb_2023 <- read_csv("mlbBaseballPlayers_2023.csv")
club_2024 <- club_2024 %>%
mutate(Age=(year(Sys.Date())-year(as.Date(paste0("01/", club_2024$DOB), format="%d/%m/%Y"))),
POS=str_split_i(POS, pattern=" / ", i=1)) %>%
rename(BAT=Bats, THW=Throws)
table(m.pred, Y.test, dnn=c("Predicted MLB", "Actual MLB"))
mean(m.pred==Y.test)
roc.plot(x=as.numeric(Y.test), pred=as.numeric(m.pred), main="ROC curve for MLB Classifcation")
table(m.pred, Y.test, dnn=c("Predicted MLB", "Actual MLB"))
mean(m.pred==Y.test)
roc.plot(x=as.numeric(Y.test), pred=as.numeric(m.pred), main="ROC curve for MLB Classifcation", binormal=T)
table(m.pred, Y.test, dnn=c("Predicted MLB", "Actual MLB"))
mean(m.pred==Y.test)
roc.plot(x=as.numeric(Y.test), pred=as.numeric(m.pred), main="ROC curve for MLB Classifcation", plot.thres = 0.5)
table(m.pred, Y.test, dnn=c("Predicted MLB", "Actual MLB"))
mean(m.pred==Y.test)
roc.plot(x=as.numeric(Y.test), pred=as.numeric(m.pred), main="ROC curve for MLB Classifcation", plot.thres = NULL)
table(m.pred, Y.test, dnn=c("Predicted MLB", "Actual MLB"))
mean(m.pred==Y.test)
roc.plot(x=as.numeric(Y.test), pred=as.numeric(m.pred), main="ROC curve for MLB Classifcation", plot.thres = NULL)
-- [Problem Description](**item-one)\n
nrow(club_2024)
colnames(club_2024)
length(colnames(club_2024))
View(club_2024)
typeof(club_2024$`#`)
nrow(mlb_2023)
ncol(mlb_2023)
dim(sub)
View(sub)
library(tidyverse)
library(MASS)
library(verification)
library(e1071)
library(class)
library(neuralnet)
set.seed(2024)
mlb_2023 <- read_csv("mlbBaseballPlayers_2023.csv")
club_2024 <- club_2024 %>%
mutate(Age=(year(Sys.Date())-year(as.Date(paste0("01/", club_2024$DOB), format="%d/%m/%Y"))),
POS=str_split_i(POS, pattern=" / ", i=1)) %>%
rename(BAT=Bats, THW=Throws)
mlb_2023 <- read_csv("mlbBaseballPlayers_2023.csv")
setwd("/Users/jadenthomas/Desktop/'Person Projects'
)
knitr::opts_chunk$set(echo = TRUE)
predict(throat.model, newdata=data.frame(duration_minutes=30), type="response")
library(dobson)
library(tidyverse)
df <- hiroshima %>%
mutate(rads_dose=case_when(
radiation=='0' ~ 0,
radiation=='1 to 9' ~5,
radiation== '10 to 49' ~ 29.5,
radiation== "50 to 99" ~ 74.5,
radiation== "100 to 199" ~ 149.5,
radiation== "200 +" ~ 249.5
))
colnames(df) <- c("radiation", "leukemia", "other_cancer", "total_cancers", "rads_dose")
ggplot(df, aes(x=rads_dose, y=leukemia)) +
geom_point()
ggplot(df, aes(x=rads_dose, y=(leukemia/total_cancers))) +
geom_point() +
geom_jitter(height=1/20, width=0.005, size=1.5, alpha=.5)
throat.model <- glm(sore_throat~duration_minutes, data=throat, family="binomial")
throat <- read_csv("/Users/jadenthomas/Desktop/OSU/OSU Junior/Spring/STAT_3202/throat_corrected.csv")
throat <- throat %>% mutate(duration_minutes=round(duration_minutes, -1))
throat
throat.model <- glm(sore_throat~duration_minutes, data=throat, family="binomial")
summary(throat.model)
predict(throat.model, newdata=data.frame(duration_minutes=30), type="response")
shiny::runApp('perceptronShiny')
getwd()
setwd("/Users/jadenthomas/Desktop/Personal Projects/Perceptron Shiny Application")
getwd()
shiny::runApp()
library(tidyverse)
ggplot(data=NULL, aes(x=0:10), y=0:10)
ggplot(data=NULL, aes(x=0:10), y=0:10) +
geom_point()
ggplot(data=NULL, aes(x=0:10, y=0:10)) +
geom_point()
ggplot(data=NULL, aes(x=0:10, y=0:10)) +
geom_point() +
geom_point(aes(x=1,y=5, color="blue"))
ggplot(data=NULL, aes(x=0:10, y=0:10)) +
geom_point() +
geom_point(aes(x=1,y=5), color="blue")
geom_point(aes(x=10, y=0)
ggplot(data=NULL, aes(x=0:10, y=0:10)) +
ggplot(data=NULL, aes(x=0:10, y=0:10)) +
geom_point() +
geom_point(aes(x=1,y=5), color="blue") +
geom_point(aes(x=10, y=0), color="red")
x <- ggplot(data=NULL, aes(x=0:10, y=0:10)) +
geom_point() +
geom_point(aes(x=1,y=5), color="blue") +
geom_point(aes(x=10, y=0), color="red")
x + geom_point(aes(x=5,y=3.5), color="magenta")
runApp()
runApp()
runApp()
runApp()
X.test <- data %>% filter(test) %>%
select(all_of(x1, x2))
runApp()
runApp()
detach("package:MASS", unload = TRUE)
runApp()
runApp()
runApp()
runApp()
